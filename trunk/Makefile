#############################################################################
# Makefile for building: rt
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sat Feb 19 22:11:07 2011
# Project:  rt.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile rt.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/X11R6/lib -L/usr/lib -lqglviewer-qt4 -lpthread -lGLU -lGL -lQtXml -lQtOpenGL -lQtGui -lQtCore 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = viewer.cpp \
		node.cpp \
		sphere.cpp \
		cylinder.cpp \
		cone.cpp \
		material.cpp \
		object.cpp \
		scene.cpp \
		ray.cpp \
		camera.cpp \
		light.cpp \
		rayTracer.cpp \
		main.cpp 
OBJECTS       = viewer.o \
		node.o \
		sphere.o \
		cylinder.o \
		cone.o \
		material.o \
		object.o \
		scene.o \
		ray.o \
		camera.o \
		light.o \
		rayTracer.o \
		main.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		rt.pro
QMAKE_TARGET  = rt
DESTDIR       = 
TARGET        = rt

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: rt.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libqglviewer-qt4.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile rt.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libqglviewer-qt4.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile rt.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/rt1.0.0 || $(MKDIR) .tmp/rt1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/rt1.0.0/ && $(COPY_FILE) --parents viewer.h node.h sphere.h material.h object.h scene.h ray.h camera.h light.h rayTracer.h hit.h color.h .tmp/rt1.0.0/ && $(COPY_FILE) --parents viewer.cpp node.cpp sphere.cpp material.cpp object.cpp scene.cpp ray.cpp camera.cpp light.cpp rayTracer.cpp main.cpp .tmp/rt1.0.0/ && (cd `dirname .tmp/rt1.0.0` && $(TAR) rt1.0.0.tar rt1.0.0 && $(COMPRESS) rt1.0.0.tar) && $(MOVE) `dirname .tmp/rt1.0.0`/rt1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/rt1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

viewer.o: viewer.cpp viewer.h \
		rayTracer.h \
		color.h \
		ray.h \
		scene.h \
		camera.h \
		node.h \
		object.h \
		material.h \
		hit.h \
		sphere.h \
		cylinder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o viewer.o viewer.cpp

node.o: node.cpp node.h \
		object.h \
		material.h \
		color.h \
		hit.h \
		ray.h \
		sphere.h \
		cylinder.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o node.o node.cpp

sphere.o: sphere.cpp sphere.h \
		object.h \
		material.h \
		color.h \
		hit.h \
		ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sphere.o sphere.cpp

material.o: material.cpp material.h \
		color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o material.o material.cpp

object.o: object.cpp object.h \
		material.h \
		color.h \
		hit.h \
		ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o object.o object.cpp

scene.o: scene.cpp scene.h \
		camera.h \
		ray.h \
		node.h \
		object.h \
		material.h \
		color.h \
		hit.h \
		sphere.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scene.o scene.cpp

ray.o: ray.cpp ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ray.o ray.cpp

camera.o: camera.cpp camera.h \
		ray.h \
		scene.h \
		node.h \
		object.h \
		material.h \
		color.h \
		hit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o camera.o camera.cpp

light.o: light.cpp light.h \
		color.h \
		hit.h \
		material.h \
		scene.h \
		camera.h \
		ray.h \
		node.h \
		object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o light.o light.cpp

rayTracer.o: rayTracer.cpp rayTracer.h \
		color.h \
		ray.h \
		scene.h \
		camera.h \
		node.h \
		object.h \
		material.h \
		hit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rayTracer.o rayTracer.cpp

main.o: main.cpp viewer.h \
		rayTracer.h \
		color.h \
		ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

